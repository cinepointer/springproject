<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cinepointer.dao.userDao">

    <!-- 아이디로 회원 조회 (로그인 및 중복 체크) -->
    <select id="selectUserById" resultType="com.cinepointer.dto.usersDto" parameterType="string">
        SELECT *
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 회원 등록 -->
    <insert id="insertUser" parameterType="com.cinepointer.dto.usersDto">
        INSERT INTO users (
            user_id, user_passwd, user_name, user_email, role_name,
            user_land_cd, user_birth_date
        ) VALUES (
            #{userId}, #{userPasswd}, #{userName}, #{userEmail}, #{roleName},
            #{userLandCd}, #{userBirthDate}
        )
    </insert>

    <!-- 회원 정보 수정 (userNum 기준) -->
    <update id="updateUser" parameterType="com.cinepointer.dto.usersDto">
	    UPDATE users
	    <set>
	        <if test="userPasswd != null and userPasswd != ''">
	            user_passwd = #{userPasswd},
	        </if>
	        user_name = #{userName},
	        user_email = #{userEmail},
	        role_name = #{roleName},
	        user_land_cd = #{userLandCd},
	        <if test="userBirthDate != null">
	            user_birth_date = #{userBirthDate},
	        </if>
	        user_enabled = #{userEnabled}
	    </set>
	    WHERE user_num = #{userNum}
	</update>


    <!-- 회원 삭제 (userId 기준) -->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM users
        WHERE user_num = #{userNum}
    </delete>
    
	<delete id="deleteUserById" parameterType="String">
        DELETE FROM users
        WHERE user_Id = #{userId}
    </delete>
    
    <!-- 회원 번호로 조회 -->
    <select id="findByUserNum" resultType="com.cinepointer.dto.usersDto" parameterType="int">
        SELECT *
        FROM users
        WHERE user_num = #{userNum}
    </select>

    <!-- 전체 회원 조회 -->
    <select id="selectAllUsers" resultType="com.cinepointer.dto.usersDto">
        SELECT *
        FROM users
        ORDER BY user_num
    </select>
	
	<select id="selectWishListByUserId" parameterType="String" resultType="com.cinepointer.dto.movieDto">
    SELECT m.*
    FROM wishlist w
    JOIN movie m ON w.movie_id = m.id
    WHERE w.user_id = #{userId}
</select>
</mapper>

